const _ = require('lodash')
const vbs = CreateObject('scriptcontrol');
vbs.language = 'vbscript';
const jscript = CreateObject('scriptcontrol');
jscript.language = 'jscript';

vbs.AddCode(` 
Class Array1d 
	Public data() 
    public length 
	Public Sub Create(byval size_) 
        length = size_  
		ReDim data(length - 1) 
	End Sub 
	Public Property Let Item(byval index, ByVal newValue) 
		data(index) = newValue
	End Property
    
	Public Default Property Get Item(byval index) 
		Item = data(index) 
	End Property 
End Class 
Function get_object(pathname, classname) 
    If pathname = "" Then 
        set get_object = GetObject(,classname) 
    ElseIf classname = "" Then 
        set get_object = GetObject(pathname) 
    Else 
        set get_object = GetObject(pathname, classname) 
    End If 
End Function
Function ToArray(obj)
    dim dict
    Set dict = CreateObject("Scripting.Dictionary")
    i = 0
    For Each x in obj
        dict.Add i, x
    Next
    ToArray = dict.Items
End Function
Function ToNum(x)
    ToNum = CDbl(x)
End Function
Function ToStr(x)
    ToStr = CStr(x)
End Function
Function ToBool(x)
    ToBool = CBool(x)
End Function
Function ToDate(x)
    ToDate = CDate(x)
End Function
Sub alert(msg)
    MsgBox msg
End Sub
`);

jscript.AddCode(`
function to_array(obj, mode) {
    if (mode === 1) {
        var a = VBArray(obj);
        return a.toArray();
    } 
    else {
        var result = [];
        for (x in obj) { result.push(x); }
        return result;
    }
}
`);

//将一个集合转换为一个js数组
function toArray(obj) {
    let result = [];
    if (ClassOf(obj) === 'variant[]') {
        let arr = jscript.Run('to_array', obj, 1);
        for (let i = 0; i < arr.length; i++) {
            result.push(arr[i]);
        }
    }
    else {
        try {
            let c = obj.Count;
            for (let i = 1; i <= c; i++) {
                result.push(obj.Item(i))
            }
        } catch (e) {
            let arr = jscript.Run('to_array', obj)
            for (let i = 0; i < arr.length; i++)
                result.push(arr[i]);
        }
    }
    return result;
}



function GetObject(pathname, classname) {
    try {
        if (arguments.length < 2 || typeof classname !== 'string')
            return vbs.Run('get_object', pathname, '');
        if (typeof pathname !== 'string')
            pathname = '';
        return vbs.Run('get_object', pathname, classname);
    } catch (e) {
        console.log('Exception : ', e.Message, '\n');
    }
};

function toVBArray(length_or_array) {
    let dic = CreateObject("Scripting.Dictionary");
    if (typeof length_or_array === 'number') {
        for (let i = 0; i < length_or_array; i++) {
            dic.Add(i, null);
        }
    } else if (Array.isArray(length_or_array)) {
        let length = length_or_array.length;
        for (let i = 0; i < length; i++) {
            dic.Add(i, length_or_array[i]);
        }
    }
    return dic.Items();
}
function ToDate(x) {
    return vbs.Run('ToDate', x);
}

function ToNum(x) {
    return vbs.Run('ToNum', x);
}

function ToStr(x) {
    return vbs.Run('ToStr', x);
}

function ToBool(x) {
    return vbs.Run('ToBool', x);
}

globalThis.alert = msg => vbs.run('alert', msg)

module.exports = {
    toArray,
    toVBArray,
    ToDate,
    ToNum,
    ToStr,
    ToBool,
}