const DATA_TYPES = {
    CELL_NAME: '单元格名称',
    JS_EXPR: 'JS表达式',
}

const ax = require('activex')
const _ = require('lodash')

function main(input, input_type, output, output_type, code) {
    try {
        code = JSON.parse(code)
        let _in = [];
        let _out;
        let excel;
        let wsf;
        if (input_type === DATA_TYPES.CELL_NAME) {
            try {
                excel = GetObject('', 'Excel.Application');
                wsf = excel.WorksheetFunction;
                _in = ax.ToArray(excel.ActiveSheet.Range(input).Rows);
            } catch (e) {
                throw ('请先打开一个excel文档');
            }
        } else if (input_type === DATA_TYPES.JS_EXPR) {
            try {
                _in = eval(input)
            } catch (e) {
                throw ('请输入正确的JS表达式');
            }
        }

        if (output_type === DATA_TYPES.CELL_NAME) {
            try {
                excel = GetObject('', 'Excel.Application')
                _out = excel.ActiveSheet.Range(output)
            } catch (e) {
                throw ('请先打开一个excel文档');
            }
        } else { //作为纯文本
            _out = output
        }
        if (excel) excel.ScreenUpdating = false;
        _in.forEach((e, i, arr) => {
            try {
                let ret = eval(code);
                if (output_type === DATA_TYPES.CELL_NAME) {
                    if (Array.isArray(ret)) {
                        _out.Offset(i, 0).Resize(1, ret.length).Value = ax.ToVBArray(ret);
                    }
                    else
                        _out.Offset(i, 0).Value = ret

                }
            } catch (e) {
                console.log(e + ' 在第' + i + '次执行时\n')
            }
        });
        if (excel) excel.ScreenUpdating = true;
    } catch (e) {
        console.log(e)
    }

}

globalThis.main = main;